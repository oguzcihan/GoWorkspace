//uygulama çalışırken çalıştığımız nesnenin hakkında bilgi toplayabiliriz.
//bilgi toplanılan nesneyi de runtime da çalıştırabiliriz.

using System;
using System.Reflection;

namespace Reflection
{
    /// <summary>
    /// Reflection
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            //DortIslem dortIslem = new DortIslem(2, 3);
            //Console.WriteLine(dortIslem.Topla(2, 4));
            //Console.WriteLine(dortIslem.Topla2());

            var type = typeof(DortIslem);
            //DortIslem dortIslem=(DortIslem) Activator.CreateInstance(type,6,7); //Çalışma anında dinamik instance oluşturur reflection
            //Console.WriteLine(dortIslem.Topla(4, 5));
            //Console.WriteLine(dortIslem.Topla2());

            var instance = Activator.CreateInstance(type, 6, 7);
            MethodInfo methodInfo = instance.GetType().GetMethod("Topla2");
            //getmethod ile ulaşır ınvoke ile çalıştırır
            Console.WriteLine(methodInfo.Invoke(instance, null));

            var methods = type.GetMethods();
            foreach (var info in methods)
            {
                Console.WriteLine("Method adı: {0}", info.Name);
                foreach (var item in info.GetParameters())
                {
                    Console.WriteLine("Parametre {0}", item.Name);
                }

                foreach (var attribute in info.GetCustomAttributes())
                {
                    Console.WriteLine("Attribute: {0}", attribute.GetType().Name);
                }
            }
        }
    }

    class DortIslem
    {
        private int _sayi1, _sayi2;
        public DortIslem(int sayi1,int sayi2)
        {
            _sayi1 = sayi1;
            _sayi2 = sayi2;
        }
        public DortIslem()
        {

        }
        public int Topla(int sayi1,int sayi2)
        {
            return sayi1 + sayi2;
        }

        public int Carp(int sayi1,int sayi2)
        {
            return sayi1 * sayi2;
        }

        public int Topla2()
        {
            return _sayi1 + _sayi2;
        }
        [MethodName("Carpma")]
        public int Carp2()
        {
            return _sayi1 * _sayi2;
        }
    }

    public class MethodNameAttribute : Attribute
    {
        private string v;

        public MethodNameAttribute(string v)
        {
            this.v = v;
        }
    }
}
